# Scaffolding generated by Casein v5.1.1.5

module Casein
  class DesignersController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Designers'
  		@designers = Designer.order(sort_order(:email)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View designer'
      @designer = Designer.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new designer'
    	@designer = Designer.new
    end

    def create
      @designer = Designer.new designer_params
    
      if @designer.save
        flash[:notice] = 'Designer created'
        redirect_to casein_designers_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new designer'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update designer'
      
      @designer = Designer.find params[:id]
    
      if @designer.update_attributes designer_params
        flash[:notice] = 'Designer has been updated'
        redirect_to casein_designers_path
      else
        flash.now[:warning] = 'There were problems when trying to update this designer'
        render :action => :show
      end
    end
 
    def destroy
      @designer = Designer.find params[:id]

      @designer.destroy
      flash[:notice] = 'Designer has been deleted'
      redirect_to casein_designers_path
    end
  
    private
      
      def designer_params
        params.require(:designer).permit(:email, :first_name, :last_name)
      end

  end
end